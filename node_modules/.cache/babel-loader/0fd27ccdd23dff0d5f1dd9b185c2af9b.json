{"ast":null,"code":"var _jsxFileName = \"/Volumes/My Files/Coding Files/BackEnd /ShopingCartProject/react-shoppingcart-project/src/components/Cart.js\";\nimport React, { Component } from \"react\";\nimport formatCurrency from \"../util\";\nexport default class Cart extends Component {\n  render() {\n    const {\n      cartItems\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, cartItems.length === 0 ? React.createElement(\"div\", {\n      className: \"cart cart-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Cart is empty\") : React.createElement(\"div\", {\n      className: \"cart cart-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"You have \", cartItems.length, \" in the cart\", \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"cart-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, cartItems.map(item => React.createElement(\"li\", {\n      key: item._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.image,\n      alt: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, item.title), React.createElement(\"div\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, formatCurrency(item.price), \" x \", item.count, \" \", React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => this.props.removeFromCart(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Remove\"))))))), cartItems.length !== 0 && React.createElement(\"div\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Total:\", \" \", formatCurrency(cartItems.reduce((a, c) => a + c.price * c.count, 0))), React.createElement(\"button\", {\n      className: \"button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Proceed\")))));\n  }\n\n}","map":{"version":3,"sources":["/Volumes/My Files/Coding Files/BackEnd /ShopingCartProject/react-shoppingcart-project/src/components/Cart.js"],"names":["React","Component","formatCurrency","Cart","render","cartItems","props","length","map","item","_id","image","title","price","count","removeFromCart","reduce","a","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,SAA3B;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC1CG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKC,KAA3B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,SAAS,CAACE,MAAV,KAAqB,CAArB,GACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,GAGC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYF,SAAS,CAACE,MADtB,kBAC0C,GAD1C,CAJJ,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,SAAS,CAACG,GAAV,CAAeC,IAAD,IACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,IAAI,CAACE,KAAf;AAAsB,MAAA,GAAG,EAAEF,IAAI,CAACG,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,IAAI,CAACG,KAAX,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,cAAc,CAACO,IAAI,CAACI,KAAN,CADjB,SACkCJ,IAAI,CAACK,KADvC,EAC8C,GAD9C,EAEE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWS,cAAX,CAA0BN,IAA1B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAFF,CAJF,CADD,CADH,CADF,CADF,EAwBGJ,SAAS,CAACE,MAAV,KAAqB,CAArB,IACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACS,GADT,EAEGL,cAAc,CACbG,SAAS,CAACW,MAAV,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAC,CAACL,KAAF,GAAUK,CAAC,CAACJ,KAA3C,EAAkD,CAAlD,CADa,CAFjB,CADF,EAOE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CADF,CAzBJ,CARF,CADF;AAiDD;;AApDyC","sourcesContent":["import React, { Component } from \"react\";\nimport formatCurrency from \"../util\";\n\nexport default class Cart extends Component {\n  render() {\n    const { cartItems } = this.props;\n    return (\n      <div>\n        {cartItems.length === 0 ? (\n          <div className=\"cart cart-header\">Cart is empty</div>\n        ) : (\n          <div className=\"cart cart-header\">\n            You have {cartItems.length} in the cart{\" \"}\n          </div>\n        )}\n        <div>\n          <div className=\"cart\">\n            <ul className=\"cart-items\">\n              {cartItems.map((item) => (\n                <li key={item._id}>\n                  <div>\n                    <img src={item.image} alt={item.title}></img>\n                  </div>\n                  <div>\n                    <div>{item.title}</div>\n                    <div className=\"right\">\n                      {formatCurrency(item.price)} x {item.count}{\" \"}\n                      <button\n                        className=\"button\"\n                        onClick={() => this.props.removeFromCart(item)}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n          {cartItems.length !== 0 && (\n            <div className=\"cart\">\n              <div className=\"total\">\n                <div>\n                  Total:{\" \"}\n                  {formatCurrency(\n                    cartItems.reduce((a, c) => a + c.price * c.count, 0)\n                  )}\n                </div>\n                <button className=\"button primary\">Proceed</button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}